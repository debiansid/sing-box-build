name: Build sing-box for OpenWrt

on:
  workflow_dispatch:

jobs:
  build-ipk:
    name: Build ARM64 OpenWrt IPK for Cortex-A53
    runs-on: ubuntu-22.04
    container:
      image: alpine:latest
      options: --rm
    steps:
      - name: Install dependencies in Alpine
        run: |
          apk update
          apk add --no-cache \
            bash \
            git \
            ruby \
            ruby-dev \
            build-base \
            binutils \
            curl \
            coreutils \
            tar
          gem install --no-document fpm

      - name: Install Go manually
        run: |
          # Download and install Go 1.22.x (adjust version as needed)
          GO_VERSION=1.24.2
          curl -L -o go.tar.gz https://golang.org/dl/go${GO_VERSION}.linux.tar.gz
          tar -C /usr/local -xzf go.tar.gz
          rm go.tar.gz
          # Set up environment
          echo "export PATH=/usr/local/go/bin:$PATH" >> $HOME/.profile
          source $HOME/.profile
          go version

      - name: Manual checkout of SagerNet/sing-box
        run: |
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          # Clone repository
          git clone --branch dev-next --no-tags https://github.com/SagerNet/sing-box.git .
          # Ensure full history (fetch-depth: 0 equivalent)
          git fetch --unshallow || true
          # Set safe directory
          git config --global --add safe.directory "$(pwd)"
          # Clean working directory (similar to clean: true)
          git clean -fdx

      - name: Restore Go modules cache
        run: |
          CACHE_KEY="go-$(sha256sum go.sum | awk '{print $1}')"
          CACHE_PATH=~/go/pkg/mod
          if [ -f "/tmp/go-cache.tar.gz" ]; then
            tar -xzf /tmp/go-cache.tar.gz -C /
          fi

      - name: Build sing-box for ARM64 (Cortex-A53)
        env:
          GOOS: linux
          GOARCH: arm64
          CGO_ENABLED: 0
          TAGS: with_gvisor,with_quic,with_dhcp,with_wireguard,with_utls,with_reality_server,with_acme,with_clash_api
        run: |
          # Ensure Go is in PATH
          export PATH=/usr/local/go/bin:$PATH
          # Target CPU: armv8-a+crypto+crc, cortex-a53+crypto+crc
          VERSION=$(go run ./cmd/internal/read_tag)
          go build -v -trimpath \
            -tags "$TAGS" \
            -ldflags "-X github.com/sagernet/sing-box/constant.Version=$VERSION -s -w -buildid=" \
            -o sing-box \
            ./cmd/sing-box

      - name: Save Go modules cache
        run: |
          CACHE_PATH=~/go/pkg/mod
          tar -czf /tmp/go-cache.tar.gz -C / $CACHE_PATH
          # Note: Cache persists only within the job unless uploaded as an artifact

      - name: Generate shell completions
        run: |
          mkdir -p release/completions
          ./sing-box completion bash > release/completions/sing-box.bash
          ./sing-box completion fish > release/completions/sing-box.fish
          ./sing-box completion zsh > release/completions/sing-box.zsh

      - name: Create directory structure for packaging
        run: |
          mkdir -p package/usr/bin
          mkdir -p package/etc/sing-box
          mkdir -p package/etc/config
          mkdir -p package/etc/init.d
          mkdir -p package/lib/upgrade/keep.d
          mkdir -p package/usr/share/bash-completion/completions
          mkdir -p package/usr/share/fish/vendor_completions.d
          mkdir -p package/usr/share/zsh/site-functions
          mkdir -p package/usr/share/licenses/sing-box
          cp sing-box package/usr/bin/
          cp release/config/config.json package/etc/sing-box/config.json
          cp release/config/openwrt.conf package/etc/config/sing-box
          cp release/config/openwrt.init package/etc/init.d/sing-box
          cp release/config/openwrt.keep package/lib/upgrade/keep.d/sing-box
          cp release/completions/sing-box.bash package/usr/share/bash-completion/completions/sing-box.bash
          cp release/completions/sing-box.fish package/usr/share/fish/vendor_completions.d/sing-box.fish
          cp release/completions/sing-box.zsh package/usr/share/zsh/site-functions/_sing-box
          cp LICENSE package/usr/share/licenses/sing-box/LICENSE

      - name: Build Debian package with fpm
        shell: bash -e {0}
        run: |
          export PATH=/usr/local/go/bin:$PATH
          VERSION=$(go run ./cmd/internal/read_tag)
          fpm -s dir -t deb \
            -f \
            --name sing-box \
            --version $VERSION \
            --architecture arm64 \
            --category net \
            --license GPL-3.0-or-later \
            --description "The universal proxy platform." \
            --url "https://sing-box.sagernet.org/" \
            --maintainer "nekohasekai <contact-git@sekai.icu>" \
            --config-files /etc/config/sing-box \
            --config-files /etc/sing-box/config.json \
            --depends ca-bundle \
            --depends kmod-inet-diag \
            --depends kmod-tun \
            --depends firewall4 \
            --before-remove release/config/openwrt.prerm \
            -C package \
            usr/bin/sing-box \
            etc/sing-box/config.json=/etc/sing-box/config.json \
            etc/config/sing-box=/etc/config/sing-box \
            etc/init.d/sing-box=/etc/init.d/sing-box \
            lib/upgrade/keep.d/sing-box=/lib/upgrade/keep.d/sing-box \
            usr/share/bash-completion/completions/sing-box.bash=/usr/share/bash-completion/completions/sing-box.bash \
            usr/share/fish/vendor_completions.d/sing-box.fish=/usr/share/fish/vendor_completions.d/sing-box.fish \
            usr/share/zsh/site-functions/_sing-box=/usr/share/zsh/site-functions/_sing-box \
            usr/share/licenses/sing-box/LICENSE=/usr/share/licenses/sing-box/LICENSE

      - name: Convert Debian package to IPK
        shell: bash -e {0}
        run: |
          export PATH=/usr/local/go/bin:$PATH
          VERSION=$(go run ./cmd/internal/read_tag)
          chmod +x .github/deb2ipk.sh
          ./.github/deb2ipk.sh arm64 sing-box_${VERSION}_arm64.deb sing-box_${VERSION}_arm64.ipk

      - name: Upload IPK artifact
        uses: actions/upload-artifact@v4
        with:
          name: sing-box-arm64-openwrt-ipk
          path: sing-box_*.ipk
